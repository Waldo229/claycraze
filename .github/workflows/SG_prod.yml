name: Deploy to SiteGround (PROD)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SG_CI_KEY }}" > ~/.ssh/sg_ci
          sed -i 's/\r$//' ~/.ssh/sg_ci
          chmod 600 ~/.ssh/sg_ci

      - name: Sanity-check secrets
        env:
          SG_HOST:         ${{ secrets.SG_HOST }}
          SG_PORT:         ${{ secrets.SG_PORT }}
          SG_USER:         ${{ secrets.SG_USER }}
          SG_DOCROOT_PROD: ${{ secrets.SG_DOCROOT_PROD }}   # e.g. /home/<user>/public_html
        run: |
          set -euo pipefail
          for v in SG_HOST SG_PORT SG_USER SG_DOCROOT_PROD; do
            if [ -z "${!v:-}" ]; then echo "❌ $v is EMPTY"; exit 1; else echo "✅ $v set"; fi
          done

      - name: Package project
        run: |
          set -euo pipefail
          TAR="$RUNNER_TEMP/site.tar.gz"
          [ -f .deployignore ] && sed -i 's/\r$//' .deployignore || true
          if [ -f .deployignore ]; then
            tar --exclude-from=.deployignore --exclude=./site.tar.gz -czf "$TAR" .
          else
            echo "No .deployignore found; continuing without it."
            tar --exclude=./site.tar.gz -czf "$TAR" .
          fi
          mv "$TAR" ./site.tar.gz
          ls -lh ./site.tar.gz

      - name: Upload & Deploy (PROD)
        env:
          SG_HOST:         ${{ secrets.SG_HOST }}
          SG_PORT:         ${{ secrets.SG_PORT }}
          SG_USER:         ${{ secrets.SG_USER }}
          SG_DOCROOT_PROD: ${{ secrets.SG_DOCROOT_PROD }}
        run: |
          set -euo pipefail
          # 1) Upload to HOME
          scp -P "$SG_PORT" -i ~/.ssh/sg_ci -o StrictHostKeyChecking=no site.tar.gz "$SG_USER@$SG_HOST:~/"

          # 2) Move into docroot and deploy
          ssh -p "$SG_PORT" -i ~/.ssh/sg_ci -o StrictHostKeyChecking=no "$SG_USER@$SG_HOST" \
            "/bin/bash -lc \"set -e
              DOC='${SG_DOCROOT_PROD}'
              [ -z \\\"\$DOC\\\" ] && DOC=\\\"\$HOME/public_html\\\"
              echo Using PROD docroot: \\\"\$DOC\\\"
              mkdir -p \\\"\$DOC\\\"
              mv -f ~/site.tar.gz \\\"\$DOC/\\\"
              cd \\\"\$DOC\\\"
              rm -rf __extract_tmp
              mkdir __extract_tmp
              tar -xzf site.tar.gz -C __extract_tmp
              shopt -s dotglob
              rm -rf *
              mv __extract_tmp/* .
              rmdir __extract_tmp
              rm -f site.tar.gz
              ls -la | head -n 40
            \""
