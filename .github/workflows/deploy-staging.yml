
name: Deploy to SiteGround (STAGING)

on:
  push:
    branches: [ "staging" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SG_CI_KEY }}" > ~/.ssh/sg_ci
          sed -i 's/\r$//' ~/.ssh/sg_ci
          chmod 600 ~/.ssh/sg_ci

      - name: Sanity-check base secrets
        env:
          SG_HOST: ${{ secrets.SG_HOST }}
          SG_PORT: ${{ secrets.SG_PORT }}
          SG_USER: ${{ secrets.SG_USER }}
        run: |
          set -euo pipefail
          for v in SG_HOST SG_PORT SG_USER; do
            [ -n "${!v:-}" ] || { echo "❌ $v is EMPTY"; exit 1; }
            echo "✅ $v set"
          done

      - name: Package project
        run: |
          set -euo pipefail
          TAR="$RUNNER_TEMP/site.tar.gz"
          [ -f .deployignore ] && sed -i 's/\r$//' .deployignore || true
          if [ -f .deployignore ]; then
            tar --exclude-from=.deployignore --exclude=./site.tar.gz -czf "$TAR" .
          else
            echo "No .deployignore found; continuing without it."
            tar --exclude=./site.tar.gz -czf "$TAR" .
          fi
          mv "$TAR" ./site.tar.gz
          ls -lh ./site.tar.gz

      - name: Upload & Deploy (STAGING)
        env:
          SG_HOST: ${{ secrets.SG_HOST }}
          SG_PORT: ${{ secrets.SG_PORT }}
          SG_USER: ${{ secrets.SG_USER }}
        run: |
          set -euo pipefail
          # 1) Upload to HOME (always exists)
          scp -P "$SG_PORT" -i ~/.ssh/sg_ci -o StrictHostKeyChecking=no site.tar.gz "$SG_USER@$SG_HOST:~/"

          # 2) Move into docroot and deploy (no risky YAML quoting thanks to here-doc)
          ssh -p "$SG_PORT" -i ~/.ssh/sg_ci -o StrictHostKeyChecking=no "$SG_USER@$SG_HOST" bash -s <<'BASH'
          set -e
          DOC="$HOME/public_html/staging"
          echo "Using STAGING docroot: $DOC"
          mkdir -p "$DOC"
          mv -f "$HOME/site.tar.gz" "$DOC/"
          cd "$DOC"
          rm -rf __extract_tmp
          mkdir __extract_tmp
          tar -xzf site.tar.gz -C __extract_tmp
          shopt -s dotglob
          rm -rf *
          mv __extract_tmp/* .
          rmdir __extract_tmp
          rm -f site.tar.gz
          ls -la | head -n 40
BASH
